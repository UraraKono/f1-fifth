// generated from rosidl_adapter/resource/msg.idl.em
// with input from fixposition_driver_ros2/msg/VRTK.msg
// generated code does not contain a copyright notice

#include "geometry_msgs/msg/PoseWithCovariance.idl"
#include "geometry_msgs/msg/TwistWithCovariance.idl"
#include "geometry_msgs/msg/Vector3.idl"
#include "std_msgs/msg/Header.idl"

module fixposition_driver_ros2 {
  module msg {
    @verbatim (language="comment", text=
      "   Copyright (c) 2023" "\n"
      "   Fixposition AG" "\n"
      "" "\n"
      "Fixposition VRTK Message")
    struct VRTK {
      std_msgs::msg::Header header;

      @verbatim (language="comment", text=
        "frame of the pose values [pose, quaternion]")
      string pose_frame;

      @verbatim (language="comment", text=
        "frame of the kinematic values [linear/angular velocity, acceleration]")
      string kin_frame;

      @verbatim (language="comment", text=
        "position, orientation")
      geometry_msgs::msg::PoseWithCovariance pose;

      @verbatim (language="comment", text=
        "linear, angular")
      geometry_msgs::msg::TwistWithCovariance velocity;

      @verbatim (language="comment", text=
        "linear acceleration")
      geometry_msgs::msg::Vector3 acceleration;

      @verbatim (language="comment", text=
        "field for the fusion status")
      int16 fusion_status;

      @verbatim (language="comment", text=
        "field for the IMU bias status")
      int16 imu_bias_status;

      @verbatim (language="comment", text=
        "field for the gnss1 status")
      int16 gnss1_status;

      @verbatim (language="comment", text=
        "field for the gnss2 status")
      int16 gnss2_status;

      @verbatim (language="comment", text=
        "field for the wheelspeed status")
      int16 wheelspeed_status;

      @verbatim (language="comment", text=
        "Fixposition software version")
      string version;
    };
  };
};
